{"version":3,"sources":["src/styles/theme.tsx","src/utils/breakpoints.js","src/utils/index.js","src/screens/HomeScreen.tsx","src/features/editorSlice.js","src/containers/EditorPane.tsx","src/components/DraggableChip.tsx","src/containers/EditorMenuItem.tsx","src/containers/EditorModal.tsx","src/screens/EditorScreen.tsx","src/screens/PreviewScreen.tsx","src/navigation/Routes.tsx","src/store.js","App.tsx","assets/images/splash.png","assets/fonts/CourierPrime-Regular.ttf","assets/fonts/CourierPrime-Bold.ttf","assets/fonts/FredokaOne-Regular.ttf"],"names":["primary","red","purple","blue","green","yellow","orange","colors","white","light","dark","black","_fontConfig","regular","fontFamily","fontWeight","medium","thin","fontConfig","web","ios","android","theme","DefaultTheme","roundness","root_size","fonts","configureFonts","accent","background","surface","text","disabled","placeholder","backdrop","onSurface","notification","windowWidth","Dimensions","get","width","windowHeight","height","between","x","range","withTheme","props","styles","StyleSheet","create","Main","justifyContent","alignItems","flexDirection","Logo","marginBottom","Button","ButtonText","textTransform","View","style","Image","source","require","mode","labelStyle","onPress","navigation","navigate","initialState","saving","content","active_menu","dropZoneValues","modal","title","open","setSave","createAsyncThunk","process","REACT_APP_ENDPOINT","is_submitted","thunkAPI","_","a","async","editorSlice","createSlice","name","reducers","setActiveMenu","state","action","payload","openModal","closeModal","setDropZone","addElement","push","extraReducers","builder","addCase","fulfilled","rejected","actions","addContent","EditorPane","useTheme","primary_arr","Object","values","Card","backgroundColor","margin","borderRadius","display","CardContent","fontSize","Content","onLayout","onSetDropzone","length","map","d","i","titleStyle","color","connect","editor","dispatch","e","nativeEvent","layout","onAddElement","useState","is_draggable","setDraggable","pan","useRef","Animated","ValueXY","current","panResponder","PanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","setOffset","_value","y","onPanResponderMove","event","dx","dy","useNativeDriver","onPanResponderRelease","gesture","left","top","is_in_x","moveX","is_in_y","moveY","isDropZone","currentTarget","textContent","spring","toValue","start","zIndex","zindex","elevation","Chip","textAlign","ChipText","panHandlers","transform","translateX","translateY","textStyle","onSetActive","onOpenModal","menu_type","menu_item_data","type","is_active","Item","marginVertical","paddingVertical","paddingHorizontal","ListAccordion","ListItem","ItemTitle","ItemIcon","ItemContainer","flexWrap","paddingLeft","pointerEvents","handlePress","id","icon","right","isExpanded","expanded","datum","arr","onCloseModal","Modal","padding","Portal","visible","onDismiss","contentContainerStyle","Text","column_width","overflow","MenuList","innerHeight","Editor","flexGrow","position","Fab","bottom","menu_data","FAB","Routes","Stack","createStackNavigator","Navigator","initialRouteName","Screen","component","HomeScreen","EditorScreen","PreviewScreen","configureStore","reducer","editorReducer","customFonts","App","React","fontsLoaded","setState","Font","store","NavigationContainer","AppRegistry","registerComponent","expo","module","exports"],"mappings":"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","file":"static/js/app.545c6c8c.chunk.js","sourcesContent":["import { DefaultTheme, configureFonts } from 'react-native-paper';\r\nimport { StyleType } from '../typings';\r\nimport { Theme } from 'react-native-paper/lib/typescript/types';\r\n\r\nconst primary: StyleType = {\r\n  red: '#F92672',\r\n  purple: '#AE81FF',\r\n  blue: '#66D9EF',\r\n  green: '#A6E22E',\r\n  yellow: '#E6DB74',\r\n  orange: '#FD971F'\r\n},\r\n  colors: StyleType = {\r\n    white: '#FFFFFF',\r\n    light: '#F3F3F1',\r\n    dark: '#D3D4D0',\r\n    black: '#272822',\r\n    ...primary\r\n  },\r\n  _fontConfig = {\r\n    regular: {\r\n      fontFamily: 'Courier Prime',\r\n      fontWeight: 'normal',\r\n    },\r\n    medium: {\r\n      fontFamily: 'Courier Prime Bold',\r\n      fontWeight: 'normal',\r\n    },\r\n    light: {\r\n      fontFamily: 'Courier Prime',\r\n      fontWeight: 'normal',\r\n    },\r\n    thin: {\r\n      fontFamily: 'Courier Prime',\r\n      fontWeight: 'normal',\r\n    },\r\n  }, fontConfig = {\r\n    web: _fontConfig,\r\n    ios: _fontConfig,\r\n    android: _fontConfig,\r\n  },\r\n  root_size = 10,\r\n  theme: Theme = {\r\n    ...DefaultTheme,\r\n    roundness: root_size * 10,\r\n    dark: false,\r\n    fonts: configureFonts(fontConfig),\r\n    colors: {\r\n      ...colors,\r\n      ...DefaultTheme.colors,\r\n      primary: colors.red,\r\n      accent: colors.blue,\r\n      background: 'transparent',\r\n      surface: colors.white,\r\n      text: colors.purple,\r\n      disabled: colors.light,\r\n      placeholder: colors.dark,\r\n      backdrop: colors.black,\r\n      onSurface: colors.green,\r\n      notification: colors.yellow\r\n    },\r\n  };\r\n\r\nexport { colors, root_size, primary };\r\nexport default theme;\r\n","import { Dimensions } from 'react-native';\n\nconst breakpoints = {\n        xs: 0,\n        sm: 600,\n        md: 900,\n        lg: 1200,\n        xl: 1536\n    },\n    windowWidth = Dimensions.get('window').width,\n    windowHeight = Dimensions.get('window').height - 64, // Subtract nav label height\n    getBreakpoint = values => {\n        let breakpoint = 'xs'\n        Object.entries(breakpoints).forEach(([i, val]) => {\n            // TODO: iterate search through hashtable of breakpoint sizes, break once greater than windowWidth to get current size.\n            // then, find matching breakpoint from values. If it doesn't exist, check for the next smallest size until reach xs\n            return values.xs\n        })\n    };\n\nexport {\n    windowHeight,\n    windowWidth\n};\n\nexport default getBreakpoint","export {\n    windowWidth,\n    windowHeight, \n    default as getBreakpoint\n} from './breakpoints';\n\nexport function between(x, range) {\n    return x >= range[0] && x <= range[1];\n  }","import React from 'react';\r\nimport { Image, View, StyleSheet, Dimensions } from 'react-native';\r\nimport { Button, withTheme } from 'react-native-paper';\r\nimport { root_size } from '../styles/theme';\r\nimport { PropsType, StyleType } from '../typings';\r\nimport { windowHeight, windowWidth } from '../utils';\r\n\r\n\r\n/* TODO: \r\n  1. Eventually convert buttons to create new/open existing projects\r\n  2. Save files locally or authenticate and associate projects in a db?\r\n*/\r\n\r\n\r\nconst HomeScreen = (props: PropsType) => {\r\n  const styles: StyleType = StyleSheet.create({\r\n    Main: {\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      flexDirection: 'column',\r\n      height: windowHeight,\r\n      \r\n    },\r\n    Logo: {\r\n      width: windowHeight / 2,\r\n      height: windowHeight / 2,\r\n      marginBottom: root_size\r\n    },\r\n    Button: {\r\n      width: windowHeight / 2,\r\n    },\r\n    ButtonText: {\r\n      fontFamily: 'Fredoka One',\r\n      textTransform: 'uppercase'\r\n      }\r\n  });\r\n\r\n  return (\r\n    <View style={styles.Main}>\r\n      <Image\r\n        style={styles.Logo}\r\n        source={require('../../assets/images/splash.png')}\r\n      />\r\n\r\n      <Button\r\n        mode=\"contained\"\r\n        style={styles.Button}\r\n        labelStyle={styles.ButtonText}\r\n        onPress={() => props.navigation.navigate('Editor')}>New Project</Button>\r\n    </View>\r\n  )\r\n};\r\n\r\nexport default withTheme(HomeScreen);\r\n","import {\n  createAsyncThunk,\n  createSlice\n} from '@reduxjs/toolkit'\n\n\nconst initialState = {\n  saving: \"idle\",\n  content: [],\n  active_menu: null,\n  dropZoneValues: null,\n  modal: {\n    title: null,\n    content: null,\n    open: false\n  }\n};\n\nconst setSave = createAsyncThunk(\n  process.env.REACT_APP_ENDPOINT,\n  async (is_submitted, thunkAPI, _) => {\n    // write state to DB\n  }\n)\n\nconst editorSlice = createSlice({\n  name: 'editor',\n  initialState,\n  reducers: {\n    setActiveMenu(state, action) {\n      state.active_menu = action.payload === state.active_menu ? null : action.payload\n    },\n    openModal(state, action) {\n      state.modal = {\n        ...action.payload,\n        open: true\n      }\n    },\n    closeModal(state) {\n      state.modal = initialState.modal\n    },\n    setDropZone(state, action) {\n      state.dropZoneValues = action.payload\n    },\n    addElement(state, action) {\n      state.content.push(action.payload)\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(setSave.fulfilled, (state, action) => {\n      if (action.payload) {\n        state.saving = \"success\"\n      }\n    })\n    builder.addCase(setSave.rejected, (state, action) => {\n      state.saving = \"fail\"\n    })\n  }\n})\n\nexport const {\n  setActiveMenu,\n  setDropZone,\n  openModal,\n  closeModal,\n  addContent,\n  addElement\n} = editorSlice.actions\nexport {\n  setSave,\n}\nexport default editorSlice.reducer","import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Card, List, useTheme, withTheme } from 'react-native-paper';\r\nimport { connect } from 'react-redux';\r\nimport { setDropZone } from '../features/editorSlice';\r\nimport { root_size, primary } from '../styles/theme';\r\n\r\nconst mapStateToProps = state => ({\r\n  content: state.editor.content\r\n}),\r\n  mapDispatchToProps = dispatch => ({\r\n    onSetDropzone: e => dispatch(setDropZone(e.nativeEvent.layout))\r\n  })\r\n\r\nconst EditorPane = (props) => {\r\n  const { colors } = useTheme(),\r\n  primary_arr = Object.values(primary)\r\n\r\n  const styles = StyleSheet.create({\r\n    Card: {\r\n      backgroundColor: colors.surface,\r\n      margin: root_size,\r\n      borderRadius: 0,\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      width: props.width - (root_size * 6)\r\n    },\r\n    CardContent: {\r\n      backgroundColor: colors.surface,\r\n      fontFamily: 'Courier Prime Bold',\r\n      fontSize: '1.5rem'\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <Card style={styles.Card}>\r\n      <Card.Content style={styles.CardContent} onLayout={props.onSetDropzone}>\r\n        {props.content.length ? props.content.map((d,i) => (<List.Item key={d} title={d} titleStyle={{color: primary_arr[i]}} />)) : null}\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nEditorPane.title = 'EditorPane';\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(EditorPane));","import React, { useRef, useState } from 'react';\nimport { PanResponder, Animated, StyleSheet } from 'react-native';\nimport { useTheme, Chip } from 'react-native-paper';\nimport { connect } from 'react-redux';\nimport { addElement } from '../features/editorSlice';\nimport { root_size } from '../styles/theme';\nimport { PropsType, StyleType } from '../typings';\nimport { between, windowHeight } from '../utils';\n\n\nconst mapStateToProps = state => ({\n    dropZoneValues: state.editor.dropZoneValues,\n}),\n    mapDispatchToProps = dispatch => ({\n        onAddElement: d => dispatch(addElement(d))\n    })\n\nconst DraggableChip = (props) => {\n    let [is_draggable, setDraggable] = useState(true);\n    const pan = useRef(new Animated.ValueXY()).current,\n        isDropZone = (gesture) => {\n            const { left, top, width } = props.dropZoneValues,\n                is_in_x = between(gesture.moveX, [left, left + width]),\n                is_in_y = between(gesture.moveY, [top, windowHeight]);\n\n            return is_in_x && is_in_y;\n        },\n        panResponder = useRef(PanResponder.create({\n            onMoveShouldSetPanResponder: () => true,\n            onPanResponderGrant: () => {\n                pan.setOffset({\n                    x: pan.x._value,\n                    y: pan.y._value\n                });\n            },\n            onPanResponderMove: Animated.event(\n                [\n                    null,\n                    { dx: pan.x, dy: pan.y }\n                ],\n                {\n                    useNativeDriver: false, // Needs to be explicitly set\n                    // @ts-ignore\n                    // listener: (event, gestureState) => console.log(event, gestureState)\n                },\n            ),\n            onPanResponderRelease: (e, gesture) => {\n                if (isDropZone(gesture)) {\n                    const text = e.currentTarget.textContent\n                    props.onAddElement(text)\n                    setDraggable(false);\n                }\n                else {\n                    Animated.spring(\n                        pan,\n                        // @ts-ignore\n                        { toValue: { x: 0, y: 0 }, useNativeDriver: false }\n                    ).start();\n                }\n            }\n        }\n        )).current;\n\n    const { colors } = useTheme(),\n        styles: StyleType = StyleSheet.create({\n            View: {\n                zIndex: props.zindex,\n                elevation: props.zindex,\n            },\n            Chip: {\n                textAlign: 'center',\n                margin: root_size / 5,\n                backgroundColor: colors.accent,\n            },\n            ChipText: {\n                color: colors.surface,\n                fontFamily: 'Courier Prime Bold',\n                textTransform: 'none'\n            }\n        });\n\n    if (is_draggable) {\n        return <Animated.View\n            {...panResponder.panHandlers}\n            style={{\n                transform: [{ translateX: pan.x }, { translateY: pan.y }]\n            }}>\n            <Chip\n                mode=\"flat\"\n                style={styles.Chip}\n                textStyle={styles.ChipText}\n            // @ts-ignore\n            >{props.text}</Chip>\n        </Animated.View>\n    }\n    else return <></>\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DraggableChip);","import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { List, useTheme, withTheme } from 'react-native-paper';\nimport DraggableChip from '../components/DraggableChip';\nimport menu_item_data from '../../assets/data/editor-menu-event.json';\nimport { StyleType } from '../typings';\nimport { colors, root_size } from '../styles/theme';\nimport { connect } from 'react-redux';\nimport { openModal, setActiveMenu } from '../features/editorSlice';\n\n\n\nconst mapStateToProps = state => ({\n    active_menu: state.editor.active_menu\n}),\n    mapDispatchToProps = dispatch => ({\n        onSetActive: d => dispatch(setActiveMenu(d)),\n        onOpenModal: d => dispatch(openModal(d))\n    })\n\nconst EditorMenuItem = props => {\n    const { roundness } = useTheme(),\n        menu_type: string = menu_item_data[props.name].type,\n        is_active = props.active_menu === props.name\n\n    const styles: StyleType = StyleSheet.create({\n        Item: {\n            marginVertical: 1,\n            paddingVertical: 0,\n            paddingHorizontal: root_size / 2,\n            color: colors.white,\n            backgroundColor: colors[props.color],\n            borderRadius: roundness,\n            display: (!props.active_menu || is_active) ? 'flex' : 'none',\n            zIndex: props.zindex\n        },\n        ListAccordion: {\n        },\n        ListItem: {\n        },\n        ItemTitle: {\n            color: colors.white,\n            fontFamily: 'Fredoka One',\n            textTransform: 'uppercase'\n\n        },\n        ItemIcon: {\n            color: colors.white,\n            marginVertical: 0\n        },\n        ItemContainer: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n            flexDirection: 'row',\n            paddingLeft: 0,\n            zIndex: props.zindex,\n            pointerEvents: 'all'\n        }\n    });\n    \n    const handlePress = () => menu_type === \"modal\" ? props.onOpenModal({}) : props.onSetActive(props.name)\n\n\n    return <>{\n        menu_type !== \"modal\" ? <List.Accordion\n            key={props.name}\n            title={props.name}\n            id={props.name}\n            left={d => <List.Icon icon={props.icon} style={styles.ItemIcon} color={colors.white} />}\n            right={d => <List.Icon icon={d.isExpanded ? \"chevron-down\" : \"chevron-left\"} style={styles.ItemIcon} color={colors.white} />}\n            style={[styles.Item, styles.ListAccordion]}\n            expanded={is_active}\n            onPress={handlePress}\n            titleStyle={styles.ItemTitle}>\n            <View style={styles.ItemContainer}>\n                {menu_item_data[props.name].content.map((datum: string, i, arr) => <DraggableChip \n                    key={datum} \n                    text={`<${datum}/>`}\n                    zindex={arr.length - i} />)}\n            </View>\n        </List.Accordion> : <List.Item\n            left={d => <List.Icon {...d} icon={props.icon} style={styles.ItemTitle} color={colors.white} />}\n            title={props.name}\n            style={[styles.Item, styles.ListItem]}\n            onPress={handlePress}\n            titleStyle={styles.ItemTitle} />\n    }</>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withTheme(EditorMenuItem))","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Modal, Portal, Text } from 'react-native-paper';\nimport { StyleType } from '../typings';\nimport { closeModal } from '../features/editorSlice';\nimport { connect } from 'react-redux';\nimport { root_size } from '../styles/theme';\n\n\nconst mapStateToProps = state => ({\n    modal: state.editor.modal\n}),\n    mapDispatchToProps = dispatch => ({\n    onCloseModal: () => dispatch(closeModal())\n    })\n\nconst EditorModal = ({ modal, onCloseModal }) => {\n    const styles: StyleType = StyleSheet.create({\n        Modal: {\n            backgroundColor: 'white',\n            padding: root_size * 2\n        }\n    });\n\n    return <Portal>\n        <Modal\n            visible={modal.open}\n            onDismiss={onCloseModal}\n            contentContainerStyle={styles.Modal}>\n            <Text>{modal.content}</Text>\n        </Modal>\n    </Portal>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorModal)","import React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { withTheme, FAB, List, Provider as PaperProvider } from 'react-native-paper';\r\nimport EditorPane from '../containers/EditorPane';\r\nimport EditorMenuItem from '../containers/EditorMenuItem';\r\nimport EditorModal from '../containers/EditorModal';\r\nimport theme, { root_size } from '../styles/theme';\r\nimport menu_data from '../../assets/data/editor-menu.json';\r\nimport { PropsType, StyleType } from '../typings';\r\nimport { windowHeight, windowWidth } from '../utils';\r\n\r\n\r\nconst EditorScreen = (props) => {\r\n  const column_width = windowWidth / (windowWidth > 768 ? 3 : 2)\r\n  const styles: StyleType = StyleSheet.create({\r\n    Content: {\r\n      display: 'flex',\r\n      flexDirection: 'row',\r\n      padding: root_size,\r\n      alignItems: 'stretch',\r\n      height: windowHeight,\r\n      overflow: 'hidden'\r\n    },\r\n    MenuList: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      width: column_width,\r\n      innerHeight: windowHeight,\r\n      margin: root_size,\r\n      zIndex: 3,\r\n      elevation: 3\r\n    },\r\n    Editor: {\r\n      flexGrow: 2,\r\n      zIndex: 2,\r\n      elevation: 2,\r\n      display: 'flex',\r\n      alignItems: 'stretch',\r\n      flexDirection: 'row',\r\n      position: 'relative',\r\n      width: windowWidth - column_width\r\n    },\r\n    Fab: {\r\n      position: 'absolute',\r\n      margin: root_size * 4,\r\n      right: root_size * 4,\r\n      bottom: 0,\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PaperProvider theme={theme}>\r\n      <View style={styles.Content}>\r\n        <View style={styles.MenuList}>\r\n            {menu_data.map((d: PropsType, i) => <EditorMenuItem\r\n              name={d.name}\r\n              key={d.name}\r\n              color={d.color}\r\n              icon={d.icon}\r\n              zindex={menu_data.length - i} />)}\r\n        </View>\r\n\r\n        <View style={styles.Editor}>\r\n          <EditorPane height={windowHeight} width={windowWidth - column_width} />\r\n          <FAB\r\n            style={styles.Fab}\r\n            icon=\"play\"\r\n            onPress={() => props.navigation.navigate('Preview')}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <EditorModal />\r\n    </PaperProvider>\r\n  )\r\n}\r\n\r\nexport default withTheme(EditorScreen);","import React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { withTheme } from 'react-native-paper';\r\nimport { PropsType, StyleType } from '../typings';\r\n\r\nconst styles: StyleType = StyleSheet.create({});\r\n\r\n\r\nconst PreviewScreen = (props: PropsType) => (\r\n  <View></View>\r\n);\r\n\r\nexport default withTheme(PreviewScreen);\r\n","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport EditorScreen from '../screens/EditorScreen';\r\nimport PreviewScreen from '../screens/PreviewScreen';\r\n\r\nexport default function Routes() {\r\n  const Stack = createStackNavigator();\r\n  \r\n  return (\r\n    <Stack.Navigator initialRouteName=\"Home\">\r\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      <Stack.Screen name=\"Editor\" component={EditorScreen} />\r\n      <Stack.Screen name=\"Preview\" component={PreviewScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n};","import { configureStore } from '@reduxjs/toolkit';\nimport editorReducer from './features/editorSlice';\n\nexport default configureStore({\n    reducer: {\n        editor: editorReducer\n    }\n});","import 'react-native-gesture-handler';\r\nimport * as React from 'react';\r\nimport { AppRegistry } from 'react-native';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport Routes from './src/navigation/Routes';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport theme from './src/styles/theme';\r\nimport * as Font from 'expo-font';\r\nimport { expo } from './app.json';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./src/store\";\r\n\r\nlet customFonts = {\r\n  'Courier Prime': require('./assets/fonts/CourierPrime-Regular.ttf'),\r\n  'Courier Prime Bold': require('./assets/fonts/CourierPrime-Bold.ttf'),\r\n  'Fredoka One': require('./assets/fonts/FredokaOne-Regular.ttf'),\r\n}\r\n\r\nconst App = () => {\r\n  const [state, setState] = React.useState({\r\n    fontsLoaded: false\r\n  })\r\n\r\n  const loadFontsAsync = async () => {\r\n    await Font.loadAsync(customFonts);\r\n    setState({ fontsLoaded: true });\r\n  }\r\n  React.useEffect(() => {loadFontsAsync()}, [])\r\n  \r\n  if (state.fontsLoaded) {\r\n  return (\r\n    <Provider store={store}>\r\n      <PaperProvider theme={theme}>\r\n        <NavigationContainer>\r\n          <Routes />\r\n        </NavigationContainer>\r\n      </PaperProvider>\r\n    </Provider>\r\n  )}\r\n  else return <></>\r\n};\r\n\r\n\r\nAppRegistry.registerComponent(expo.name, () => App);\r\n\r\nexport default App;","module.exports = __webpack_public_path__ + \"static/media/splash.30be3f24.png\";","module.exports = __webpack_public_path__ + \"./fonts/CourierPrime-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/CourierPrime-Bold.ttf\";","module.exports = \"data:font/ttf;base64,\""],"sourceRoot":""}